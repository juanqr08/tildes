{"version":3,"sources":["logo.svg","constants/Request.jsx","components/VerifyTildes.jsx","components/shared/Navbar.jsx","components/Tildes.jsx","App.js","reportWebVitals.js","index.js"],"names":["URL","Input","styled","display","columns","field","headerName","with","flex","VerifyTildes","state","selectedFile","nameFile","result","list","count","pageSize","handleInputChange","bind","submit","parserResult","event","this","setState","target","files","name","undefined","console","log","formData","FormData","append","warn","axios","post","then","response","data","catch","error","listResult","Object","keys","forEach","item","values","ort","push","id","word","line","rows","onPageSizeChange","newPageSize","rowsPerPageOptions","pagination","checkboxSelection","style","height","width","marginTop","TextField","marginLeft","disabled","label","value","variant","htmlFor","accept","type","onChange","IconButton","component","onClick","color","Component","ButtonAppBar","anchor","React","top","left","bottom","right","toggleDrawer","open","key","Box","sx","flexGrow","AppBar","position","Toolbar","size","edge","mr","SwipeableDrawer","onClose","onOpen","role","onKeyDown","List","ListItem","button","Link","to","ListItemIcon","ListItemText","primary","Divider","Typography","Tildes","useState","setList","selection","setSelection","setPageSize","useEffect","Axios","url","result_data","id_word","wordwithtilde","length","id_selection","delete","onSelectionModelChange","newSelection","resultSelect","filter","find","sel","map","ids","App","path","exact","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7b7d90ad.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export const URL = `https://tildes-project.herokuapp.com/api`\r\nexport const requestOptions = {\r\n    method: '',\r\n    headers: { \r\n        'Content-Type': 'application/json',\r\n        'Access-Control-Allow-Origin': '*'\r\n    }/* ,\r\n    body: '' */\r\n};\r\n","import React, { Component, Fragment, useEffect, useState } from 'react';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport { URL } from '../constants/Request';\r\nimport axios from 'axios';\r\nimport Button from '@mui/material/Button';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport { styled } from '@mui/material/styles';\r\nimport PictureAsPdfIcon from '@mui/icons-material/PictureAsPdf';\r\nimport TextField from '@mui/material/TextField';\r\nimport SendIcon from '@mui/icons-material/Send';\r\n\r\nconst Input = styled('input')({\r\n  display: 'none',\r\n});\r\n\r\nconst columns = [\r\n  { field: 'id', headerName: 'N- Pagina', with: 100},\r\n  { field: 'word', headerName: 'Palabra Encontrada', flex: 1 },\r\n  { field: 'line', headerName: 'Linea', flex: 1 }\r\n];\r\n\r\nclass VerifyTildes extends Component{\r\n\r\n  constructor(){\r\n      super();\r\n      this.state = {\r\n          selectedFile: '',\r\n          nameFile: '',\r\n          result: '',\r\n          list: [],\r\n          count: 0,\r\n          pageSize: 5\r\n      }\r\n\r\n      this.handleInputChange = this.handleInputChange.bind(this);\r\n      this.submit = this.submit.bind(this);\r\n      this.parserResult = this.parserResult.bind(this);\r\n  }\r\n\r\n  handleInputChange(event) {\r\n    this.setState({\r\n        selectedFile: event.target.files[0],\r\n        nameFile: event.target.files[0].name\r\n    });\r\n  }\r\n\r\n  submit(){\r\n    if (this.state.selectedFile === undefined || this.state.selectedFile === '') {\r\n      console.log(\"entra\")\r\n    } else {\r\n      const formData = new FormData() \r\n      formData.append('file', this.state.selectedFile)\r\n      console.warn(this.state.selectedFile);\r\n      axios.post(\r\n        `${URL}/tildes/verifyPdf/`,\r\n        formData\r\n      ).then( response => {\r\n        console.log(response.data)\r\n        this.setState({result: response.data, count: 0})\r\n      })\r\n      .catch( error => {\r\n        console.log(error)\r\n      })\r\n    }\r\n  }\r\n\r\n  parserResult() {\r\n    if (this.state.count < 1) {\r\n      const result = this.state.result.result\r\n      console.log(result)\r\n      let listResult = [];\r\n      Object.keys(result).forEach( item => {\r\n        Object.values(result[item]).forEach( ort => {\r\n          listResult.push({\r\n            id: item,\r\n            word: ort['word'],\r\n            line: ort['line']\r\n          });\r\n        });\r\n      });\r\n      this.setState({\r\n        list: listResult\r\n      })\r\n      this.setState({count: 1})\r\n    }\r\n    return (\r\n      <Fragment>\r\n        <DataGrid\r\n            rows={this.state.list}\r\n            columns={columns}\r\n            pageSize={this.state.pageSize}\r\n            onPageSizeChange={(newPageSize) => this.setState({pageSize: newPageSize})}\r\n            rowsPerPageOptions={[5, 10, 20, 50, 100]}\r\n            pagination\r\n            checkboxSelection\r\n        />\r\n      </Fragment>\r\n    )\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div style={{ height: 400, width: '100%', marginTop: '20px' }}>\r\n        <TextField\r\n          style={{width: '90%', marginLeft: '20px'}}\r\n          disabled\r\n          id=\"standard-disabled\"\r\n          label=\"Archivo a Verificar\"\r\n          value={this.state.nameFile}\r\n          variant=\"standard\"\r\n        />\r\n        <label htmlFor=\"contained-button-file\">\r\n          <Input accept=\".pdf\" id=\"contained-button-file\" type=\"file\" onChange={this.handleInputChange} />\r\n          <IconButton variant=\"contained\" component=\"span\">\r\n            <PictureAsPdfIcon />\r\n          </IconButton>\r\n        </label>\r\n        <label htmlFor=\"contained-button-send-file\">\r\n          <Input id=\"contained-button-send-file\" type=\"submit\" onClick={this.submit} />\r\n          <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\r\n            <SendIcon />\r\n          </IconButton>\r\n        </label>\r\n        { this.state.result &&\r\n          <this.parserResult />\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default VerifyTildes;","import * as React from 'react';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Button from '@mui/material/Button';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport UploadFileIcon from '@mui/icons-material/UploadFile';\r\nimport FormatListNumberedRtlIcon from '@mui/icons-material/FormatListNumberedRtl';\r\nimport Divider from '@mui/material/Divider';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport List from '@mui/material/List';\r\nimport SwipeableDrawer from '@mui/material/SwipeableDrawer';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function ButtonAppBar() {\r\n\r\n  const [state, setState] = React.useState({\r\n    top: false,\r\n    left: false,\r\n    bottom: false,\r\n    right: false,\r\n  });\r\n\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    if (\r\n      event &&\r\n      event.type === 'keydown' &&\r\n      (event.key === 'Tab' || event.key === 'Shift')\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setState({ ...state, [anchor]: open });\r\n  }; \r\n\r\n  const list = (anchor) => (\r\n    <Box\r\n      sx={{ width: anchor === 'top' || anchor === 'bottom' ? 'auto' : 250 }}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(anchor, false)}\r\n      onKeyDown={toggleDrawer(anchor, false)}\r\n    >\r\n      <List>\r\n        <ListItem button component={Link} to='/' key='Listado de Tildes'>\r\n          <ListItemIcon>\r\n            <FormatListNumberedRtlIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary='Listado de Tildes' />\r\n        </ListItem>\r\n        <Divider />\r\n        <ListItem button component={Link} to='/verify' key='Verificador de Tildes'>\r\n          <ListItemIcon>\r\n            <UploadFileIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary='Verificador de Tildes' />\r\n        </ListItem>\r\n      </List>\r\n    </Box>\r\n  );\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Box sx={{ flexGrow: 1 }}>\r\n        <AppBar position=\"static\">\r\n          <Toolbar>\r\n            <IconButton\r\n              onClick={toggleDrawer('left', true)}\r\n              size=\"large\"\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              aria-label=\"menu\"\r\n              sx={{ mr: 2 }}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <SwipeableDrawer\r\n              anchor={'left'}\r\n              open={state['left']}\r\n              onClose={toggleDrawer('left', false)}\r\n              onOpen={toggleDrawer('left', true)}\r\n            >\r\n              {list('left')}\r\n            </SwipeableDrawer>\r\n            <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n              Verificador de Tildes\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </Box>\r\n    </React.Fragment>\r\n  );\r\n}","import React, { Component, Fragment, useEffect, useState } from 'react';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport { URL } from '../constants/Request';\r\nimport Axios from 'axios';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport { styled } from '@mui/material/styles';\r\nimport Divider from '@mui/material/Divider';\r\n\r\nconst Input = styled('input')({\r\n  display: 'none',\r\n});\r\n\r\nconst columns = [\r\n  { field: 'id', headerName: 'ID', width: 70 },\r\n  { field: 'word', headerName: 'Palabra', flex: 1},\r\n  { field: 'wordwithtilde', headerName: 'Palabra con Tilde', flex: 1 }\r\n];\r\n\r\n\r\nconst Tildes = () => {\r\n  \r\n  const [list, setList] = useState([]);\r\n  const [selection, setSelection] = useState([]);\r\n  const [pageSize, setPageSize] = useState(5);\r\n  \r\n  const submit = () => {\r\n    if (selection.length <= 20) {\r\n      selection.forEach( id_selection => {\r\n        Axios.delete(`${URL}/tildes/${id_selection}`, ).then( response => {\r\n          console.log(response);\r\n          Axios({\r\n            url: `${URL}/tildes`\r\n          }).then( response => {\r\n            let count = 0;\r\n            let result_data = []\r\n            Object.values(response.data).forEach( item => {\r\n              count += 1;\r\n              result_data.push({\r\n                id: count,\r\n                id_word: item['id'],\r\n                word: item['word'],\r\n                wordwithtilde: item['wordwithtilde']\r\n              });\r\n            });\r\n            setList(result_data);\r\n          })\r\n          .catch( error => {\r\n            console.log(error)\r\n          })\r\n        })\r\n        .catch( error => {\r\n          console.log(error)\r\n        })\r\n      });\r\n    }\r\n  }\r\n  \r\n  useEffect(() => {\r\n    Axios({\r\n      url: `${URL}/tildes`\r\n    }).then( response => {\r\n      // console.log(response.data)\r\n      let count = 0;\r\n      let result_data = []\r\n      Object.values(response.data).forEach( item => {\r\n        count += 1;\r\n        result_data.push({\r\n          id: count,\r\n          id_word: item['id'],\r\n          word: item['word'],\r\n          wordwithtilde: item['wordwithtilde']\r\n        });\r\n      });\r\n      setList(result_data);\r\n    })\r\n    .catch( error => {\r\n      console.log(error)\r\n    })\r\n  }, [setList])\r\n\r\n  return (\r\n    <div style={{ height: 500, width: '100%' }}>\r\n        <label htmlFor=\"contained-button-file\" style={{ marginLeft: '95%' }}>\r\n          <Input id=\"contained-button-file\" type=\"button\" onClick={submit} />\r\n          <IconButton variant=\"contained\" component=\"span\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </label>\r\n        <Divider />\r\n        <Fragment>\r\n          <DataGrid\r\n              rows={list}\r\n              columns={columns}\r\n              pageSize={pageSize}\r\n              onPageSizeChange={(newPageSize) => setPageSize(newPageSize)}\r\n              rowsPerPageOptions={[5, 10, 20, 50, 100]}\r\n              checkboxSelection\r\n              onSelectionModelChange={(newSelection) => {\r\n                let listSelect = list.filter( item => newSelection.find(sel => sel == item.id))\r\n                let resultSelect = listSelect.map( ids => ids.id_word);\r\n                setSelection(resultSelect);\r\n              }}\r\n          />\r\n        </Fragment>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Tildes;","import logo from './logo.svg';\nimport './App.scss';\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport VerifyTildes from './components/VerifyTildes';\nimport Navbar from './components/shared/Navbar';\nimport Tildes from './components/Tildes';\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Navbar />\n        <Routes>\n          <Route path=\"/\" exact element={<Tildes />}/>\n          <Route path=\"/verify\" exact element={<VerifyTildes />}/>\n        </Routes>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}