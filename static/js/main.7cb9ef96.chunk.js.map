{"version":3,"sources":["constants/Request.jsx","components/VerifyTildes.jsx","components/shared/Navbar.jsx","components/Tildes.jsx","App.js","reportWebVitals.js","index.js"],"names":["URL","Alert","React","forwardRef","props","ref","elevation","variant","Input","styled","display","columns","field","headerName","with","flex","width","VerifyTildes","state","selectedFile","nameFile","result","list","timeResult","count","pageSize","openprogress","openAlert","openAlertError","openAlertWarning","messagesuccess","messageerror","messagewarning","handleInputChange","bind","submit","parserResult","handleCloseAlertWarning","handleCloseAlertError","handleCloseAlert","handleCloseProgress","event","this","setState","target","files","name","reason","type","undefined","formData","FormData","append","axios","post","then","response","console","log","data","catch","error","message","listResult","Object","keys","forEach","item","values","ort","push","id","word","wordwithtilde","line","Typography","component","sx","flexGrow","style","marginLeft","marginTop","Math","round","time","rows","onPageSizeChange","newPageSize","rowsPerPageOptions","pagination","localeText","toolbarDensity","toolbarDensityLabel","toolbarDensityCompact","toolbarDensityStandard","toolbarDensityComfortable","components","Toolbar","GridToolbar","checkboxSelection","Divider","height","Stack","spacing","Snackbar","open","autoHideDuration","onClose","severity","AlertTitle","Dialog","fullWidth","disableEscapeKeyDown","DialogTitle","DialogContent","Box","LinearProgress","TextField","disabled","label","value","htmlFor","accept","onChange","IconButton","onClick","color","Component","ButtonAppBar","anchor","top","left","bottom","right","toggleDrawer","key","AppBar","position","size","edge","mr","SwipeableDrawer","onOpen","role","onKeyDown","List","ListItem","button","Link","to","ListItemIcon","ListItemText","primary","editable","Tildes","useState","setList","selection","setSelection","setPageSize","setOpen","setOpenprogress","setWord","setWordwithtilde","setOpenAlert","setOpenAlertWarning","setOpenAlertError","setMessageerror","setMessagewarning","handleClose","useEffect","Axios","url","result_data","id_word","flexDirection","justifyContent","length","id_selection","delete","DialogContentText","autoFocus","margin","DialogActions","Button","dataPost","onSelectionModelChange","newSelection","resultSelect","filter","find","sel","map","ids","onCellEditCommit","dataWord","row","put","App","path","exact","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7cb9ef96.chunk.js","sourcesContent":["export const URL = `https://tildes-project.herokuapp.com/api`\r\n// export const URL = `http://localhost:8000/api`\r\nexport const requestOptions = {\r\n    method: '',\r\n    headers: { \r\n        'Content-Type': 'application/json',\r\n        'Access-Control-Allow-Origin': '*'\r\n    }/* ,\r\n    body: '' */\r\n};\r\n","import React, { Component, Fragment } from 'react';\r\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\r\nimport { URL } from '../constants/Request';\r\nimport axios from 'axios';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport { styled } from '@mui/material/styles';\r\nimport PictureAsPdfIcon from '@mui/icons-material/PictureAsPdf';\r\nimport TextField from '@mui/material/TextField';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport MuiAlert from '@mui/material/Alert';\r\nimport Stack from '@mui/material/Stack';\r\nimport AlertTitle from '@mui/material/AlertTitle';\r\nimport Box from '@mui/material/Box';\r\nimport LinearProgress from '@mui/material/LinearProgress';\r\nimport Snackbar from '@mui/material/Snackbar';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Typography from '@mui/material/Typography';\r\nimport Divider from '@mui/material/Divider';\r\n\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\nconst Input = styled('input')({\r\n  display: 'none',\r\n});\r\n\r\nconst columns = [\r\n  { field: 'id', headerName: 'N- Pagina', with: 100},\r\n  { field: 'word', headerName: 'Palabra Encontrada', flex: 1 },\r\n  { field: 'wordwithtilde', headerName: 'Palabra con Tilde', flex: 1 },\r\n  { field: 'line', headerName: 'Linea', flex: 1, width: '100%' }\r\n];\r\n\r\nclass VerifyTildes extends Component{\r\n\r\n  constructor(){\r\n      super();\r\n      this.state = {\r\n          selectedFile: '',\r\n          nameFile: '',\r\n          result: '',\r\n          list: [],\r\n          timeResult: 0,\r\n          count: 0,\r\n          pageSize: 5,\r\n          openprogress: false,\r\n          openAlert: false,\r\n          openAlertError: false,\r\n          openAlertWarning: false,\r\n          messagesuccess: \"\",\r\n          messageerror: \"\",\r\n          messagewarning: \"\",\r\n      }\r\n\r\n      this.handleInputChange = this.handleInputChange.bind(this);\r\n      this.submit = this.submit.bind(this);\r\n      this.parserResult = this.parserResult.bind(this);\r\n      this.handleCloseAlertWarning = this.handleCloseAlertWarning.bind(this);\r\n      this.handleCloseAlertError = this.handleCloseAlertError.bind(this);\r\n      this.handleCloseAlert = this.handleCloseAlert.bind(this);\r\n      this.handleCloseProgress = this.handleCloseProgress.bind(this);\r\n  }\r\n\r\n  handleInputChange(event) {\r\n    this.setState({\r\n        selectedFile: event.target.files[0],\r\n        nameFile: event.target.files[0].name\r\n    });\r\n  }\r\n\r\n  handleCloseAlertError(event, reason) {\r\n    this.setState({openAlertError: false});\r\n  };\r\n\r\n  handleCloseAlertWarning(event, reason) {\r\n    this.setState({openAlertWarning: false});\r\n  };\r\n\r\n  handleCloseAlert(event, reason) {\r\n    this.setState({openAlert: false})\r\n  };\r\n\r\n  handleCloseProgress(event) {\r\n    if (event.type !== \"click\") {\r\n      this.setState({openprogress: false});\r\n    }\r\n  };\r\n\r\n  submit(){\r\n    if (this.state.selectedFile === undefined || this.state.selectedFile === '') {\r\n      this.setState({messagewarning: \"Se debe cargar un archivo PDF.\"})\r\n      this.setState({openAlertWarning: true})\r\n      return\r\n    } else {\r\n      this.setState({openprogress: true});\r\n      const formData = new FormData() \r\n      formData.append('file', this.state.selectedFile)\r\n      // console.warn(this.state.selectedFile);\r\n      axios.post(\r\n        `${URL}/tildes/verifyPdf/`,\r\n        formData\r\n      ).then( response => {\r\n        console.log(response.data)\r\n        this.setState({openprogress: false});\r\n        this.setState({result: response.data, count: 0})\r\n        this.setState({openAlert: true})\r\n        this.setState({messagesuccess: `Archivo ${this.state.selectedFile.name} analizado correctamente.`})\r\n      })\r\n      .catch( error => {\r\n        console.error(error)\r\n        this.setState({openprogress: false});\r\n        this.setState({openAlert: false})\r\n        this.setState({messageerror: error.message})\r\n        this.setState({openAlertError: true})\r\n      })\r\n    }\r\n  }\r\n\r\n  parserResult() {\r\n    if (this.state.count < 1) {\r\n      const result = this.state.result.result\r\n      // console.log(result)\r\n      let listResult = [];\r\n      Object.keys(result).forEach( item => {\r\n        Object.values(result[item]).forEach( ort => {\r\n          listResult.push({\r\n            id: item,\r\n            word: ort['word'],\r\n            wordwithtilde: ort['wordwithtilde'],\r\n            line: ort['line']\r\n          });\r\n        });\r\n      });\r\n      this.setState({\r\n        list: listResult\r\n      })\r\n      this.setState({count: 1})\r\n    }\r\n    return (\r\n      <Fragment>\r\n        <Typography variant=\"p\" component=\"div\" sx={{ flexGrow: 1 }} style={{ marginLeft: '10px', marginTop: '20px' }}>\r\n        Tiempo de Analisis: {Math.round(this.state.result.time) < 60 ? (\r\n          <p>{Math.round(this.state.result.time)} Segundos</p>\r\n        ): (\r\n          <p>{Math.round(this.state.result.time / 60)} Minutos</p>\r\n        )}\r\n        </Typography>\r\n        <DataGrid\r\n            rows={this.state.list}\r\n            columns={columns}\r\n            pageSize={this.state.pageSize}\r\n            onPageSizeChange={(newPageSize) => this.setState({pageSize: newPageSize})}\r\n            rowsPerPageOptions={[5, 10, 20, 50, 100]}\r\n            pagination\r\n            localeText={{\r\n              toolbarDensity: 'Size',\r\n              toolbarDensityLabel: 'Size',\r\n              toolbarDensityCompact: 'Small',\r\n              toolbarDensityStandard: 'Medium',\r\n              toolbarDensityComfortable: 'Large',\r\n            }}\r\n            components={{\r\n              Toolbar: GridToolbar,\r\n            }}\r\n            checkboxSelection\r\n        />\r\n        <Divider />\r\n      </Fragment>\r\n    )\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div style={{ height: 400, width: '100%', marginTop: '20px' }}>\r\n        <Stack spacing={2} sx={{ width: '100%' }}>\r\n          <Snackbar open={this.state.openAlert} autoHideDuration={6000} onClose={this.handleCloseAlert}>\r\n            <Alert onClose={this.handleCloseAlert} severity=\"success\" sx={{ width: '100%' }}>\r\n            {this.state.messagesuccess}\r\n            </Alert>\r\n          </Snackbar>\r\n        </Stack>\r\n        <Stack spacing={2} sx={{ width: '100%' }}>\r\n          <Snackbar open={this.state.openAlertError} autoHideDuration={6000} sx={{ width: '300px' }} onClose={this.handleCloseAlertError}>\r\n            <Alert onClose={this.handleCloseAlertError} severity=\"error\" sx={{ width: '100%' }}>\r\n              <AlertTitle>Error</AlertTitle>\r\n              {this.state.messageerror}\r\n            </Alert>\r\n          </Snackbar>\r\n        </Stack>\r\n        <Stack spacing={2} sx={{ width: '100%' }}>\r\n          <Snackbar open={this.state.openAlertWarning} autoHideDuration={6000} sx={{ width: '300px' }} onClose={this.handleCloseAlertWarning}>\r\n            <Alert onClose={this.handleCloseAlertWarning} severity=\"warning\" sx={{ width: '100%' }}>\r\n              <AlertTitle>Advertencia</AlertTitle>\r\n              {this.state.messagewarning}\r\n            </Alert>\r\n          </Snackbar>\r\n        </Stack>\r\n        <Dialog fullWidth disableEscapeKeyDown open={this.state.openprogress} onClose={this.handleCloseProgress}>\r\n          <DialogTitle>Cargando...</DialogTitle>\r\n          <DialogContent>\r\n            <Box sx={{ width: '100%' }}>\r\n              <LinearProgress />\r\n            </Box>\r\n          </DialogContent>\r\n        </Dialog>\r\n        <TextField\r\n          style={{width: '90%', marginLeft: '20px'}}\r\n          disabled\r\n          id=\"standard-disabled\"\r\n          label=\"Archivo a Verificar\"\r\n          value={this.state.nameFile}\r\n          variant=\"standard\"\r\n        />\r\n        <label htmlFor=\"contained-button-file\">\r\n          <Input accept=\".pdf\" id=\"contained-button-file\" type=\"file\" onChange={this.handleInputChange} />\r\n          <IconButton variant=\"contained\" component=\"span\">\r\n            <PictureAsPdfIcon />\r\n          </IconButton>\r\n        </label>\r\n        <label htmlFor=\"contained-button-send-file\">\r\n          <Input id=\"contained-button-send-file\" type=\"submit\" onClick={this.submit} />\r\n          <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\r\n            <SendIcon />\r\n          </IconButton>\r\n        </label>\r\n        { this.state.result &&\r\n          <this.parserResult />\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default VerifyTildes;","import * as React from 'react';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport UploadFileIcon from '@mui/icons-material/UploadFile';\r\nimport FormatListNumberedRtlIcon from '@mui/icons-material/FormatListNumberedRtl';\r\nimport Divider from '@mui/material/Divider';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport List from '@mui/material/List';\r\nimport SwipeableDrawer from '@mui/material/SwipeableDrawer';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function ButtonAppBar() {\r\n\r\n  const [state, setState] = React.useState({\r\n    top: false,\r\n    left: false,\r\n    bottom: false,\r\n    right: false,\r\n  });\r\n\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    if (\r\n      event &&\r\n      event.type === 'keydown' &&\r\n      (event.key === 'Tab' || event.key === 'Shift')\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setState({ ...state, [anchor]: open });\r\n  }; \r\n\r\n  const list = (anchor) => (\r\n    <Box\r\n      sx={{ width: anchor === 'top' || anchor === 'bottom' ? 'auto' : 250 }}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(anchor, false)}\r\n      onKeyDown={toggleDrawer(anchor, false)}\r\n    >\r\n      <List>\r\n        <ListItem button component={Link} to='/tildes' key='Listado de Tildes'>\r\n          <ListItemIcon>\r\n            <FormatListNumberedRtlIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary='Listado de Tildes' />\r\n        </ListItem>\r\n        <Divider />\r\n        <ListItem button component={Link} to='/verify' key='Verificador de Tildes'>\r\n          <ListItemIcon>\r\n            <UploadFileIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary='Verificador de Tildes' />\r\n        </ListItem>\r\n      </List>\r\n    </Box>\r\n  );\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Box sx={{ flexGrow: 1 }}>\r\n        <AppBar position=\"static\">\r\n          <Toolbar>\r\n            <IconButton\r\n              onClick={toggleDrawer('left', true)}\r\n              size=\"large\"\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              aria-label=\"menu\"\r\n              sx={{ mr: 2 }}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <SwipeableDrawer\r\n              anchor={'left'}\r\n              open={state['left']}\r\n              onClose={toggleDrawer('left', false)}\r\n              onOpen={toggleDrawer('left', true)}\r\n            >\r\n              {list('left')}\r\n            </SwipeableDrawer>\r\n            <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n              Verificador de Tildes\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </Box>\r\n    </React.Fragment>\r\n  );\r\n}","import React, { Fragment, useEffect, useState } from 'react';\r\nimport { DataGrid, GridToolbar  } from '@mui/x-data-grid';\r\nimport { URL } from '../constants/Request';\r\nimport Axios from 'axios';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport { styled } from '@mui/material/styles';\r\nimport Divider from '@mui/material/Divider';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport Box from '@mui/material/Box';\r\nimport LinearProgress from '@mui/material/LinearProgress';\r\nimport Snackbar from '@mui/material/Snackbar';\r\nimport MuiAlert from '@mui/material/Alert';\r\nimport Stack from '@mui/material/Stack';\r\nimport AlertTitle from '@mui/material/AlertTitle';\r\n\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\nconst Input = styled('input')({\r\n  display: 'none',\r\n});\r\n\r\nconst columns = [\r\n  { field: 'id', headerName: 'ID', width: 70 },\r\n  { field: 'word', headerName: 'Palabra', flex: 1, editable: true},\r\n  { field: 'wordwithtilde', headerName: 'Palabra con Tilde', flex: 1, editable: true }\r\n];\r\n\r\n\r\nconst Tildes = () => {\r\n  \r\n  const [list, setList] = useState([]);\r\n  const [selection, setSelection] = useState([]);\r\n  const [pageSize, setPageSize] = useState(5);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [openprogress, setOpenprogress] = React.useState(false);\r\n  const [word, setWord] = React.useState(\"\");\r\n  const [wordwithtilde, setWordwithtilde] = React.useState(\"\");\r\n  const [openAlert, setOpenAlert] = React.useState(false);\r\n  const [openAlertWarning, setOpenAlertWarning] = React.useState(false);\r\n  const [openAlertError, setOpenAlertError] = React.useState(false);\r\n  const [messageerror, setMessageerror] = React.useState(\"\");\r\n  const [messagewarning, setMessagewarning] = React.useState(\"\");\r\n\r\n  const handleCloseAlertError = (event, reason) => {\r\n    setOpenAlertError(false);\r\n  };\r\n  \r\n  const handleCloseAlertWarning = (event, reason) => {\r\n    setOpenAlertWarning(false);\r\n  };\r\n\r\n  const handleCloseAlert = (event, reason) => {\r\n    // if (reason === 'clickaway') {\r\n    //   return;\r\n    // }\r\n\r\n    setOpenAlert(false);\r\n  };\r\n\r\n  const addWord = () => {\r\n    setOpen(true);\r\n  }\r\n\r\n  const addWordSubmit = () => {\r\n    // console.log(word)\r\n    // console.log(wordwithtilde)\r\n    if (!word || !wordwithtilde) {\r\n      setMessagewarning(\"Ninguno de los campos pueden estar vacios.\")\r\n      setOpenAlertWarning(true)\r\n      return\r\n    }\r\n    let dataPost = {\r\n      \"word\": word,\r\n      'wordwithtilde': wordwithtilde\r\n    }\r\n    Axios.post(`${URL}/tildes/`, dataPost).then( response => {\r\n      // console.log(response);\r\n      setOpen(false);\r\n      setOpenprogress(true);\r\n      Axios({\r\n        url: `${URL}/tildes`\r\n      }).then( response => {\r\n        let count = 0;\r\n        let result_data = []\r\n        Object.values(response.data).forEach( item => {\r\n          count += 1;\r\n          result_data.push({\r\n            id: count,\r\n            id_word: item['id'],\r\n            word: item['word'],\r\n            wordwithtilde: item['wordwithtilde']\r\n          });\r\n        });\r\n        setList(result_data);\r\n        setOpenAlert(true)\r\n      })\r\n      .catch( error => {\r\n        console.error(error)\r\n        setOpenAlert(false)\r\n        setMessageerror(error.message)\r\n        setOpenAlertError(true)\r\n      })\r\n    })\r\n    .catch( error => {\r\n      console.error(error)\r\n      setOpenAlert(false)\r\n      setMessageerror(error.message)\r\n      setOpenAlertError(true)\r\n    })\r\n  }\r\n\r\n  const handleCloseProgress = (event) => {\r\n    if (event.type !== \"click\") {\r\n      setOpenprogress(false);\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const submit = () => {\r\n    if (selection.length <= 20) {\r\n      selection.forEach( id_selection => {\r\n        Axios.delete(`${URL}/tildes/${id_selection}`).then( response => {\r\n          // console.log(response);\r\n          Axios({\r\n            url: `${URL}/tildes`\r\n          }).then( response => {\r\n            let count = 0;\r\n            let result_data = []\r\n            Object.values(response.data).forEach( item => {\r\n              count += 1;\r\n              result_data.push({\r\n                id: count,\r\n                id_word: item['id'],\r\n                word: item['word'],\r\n                wordwithtilde: item['wordwithtilde']\r\n              });\r\n            });\r\n            setList(result_data);\r\n          })\r\n          .catch( error => {\r\n            console.error(error)\r\n          })\r\n        })\r\n        .catch( error => {\r\n          console.error(error)\r\n        })\r\n      });\r\n    }\r\n  }\r\n  \r\n  useEffect(() => {\r\n    setOpenprogress(true);\r\n    Axios({\r\n      url: `${URL}/tildes`\r\n    }).then( response => {\r\n      // console.log(response.data)\r\n      let count = 0;\r\n      let result_data = []\r\n      Object.values(response.data).forEach( item => {\r\n        count += 1;\r\n        result_data.push({\r\n          id: count,\r\n          id_word: item['id'],\r\n          word: item['word'],\r\n          wordwithtilde: item['wordwithtilde']\r\n        });\r\n      });\r\n      setList(result_data);\r\n      setOpenprogress(false);\r\n    })\r\n    .catch( error => {\r\n      console.error(error.message)\r\n      setOpenprogress(false);\r\n      setMessageerror(error.message)\r\n      setOpenAlertError(true)\r\n    })\r\n  }, [setList, setOpenprogress, setMessageerror]);\r\n\r\n  const editWord = (dataWord) => {\r\n    try {\r\n      if (!dataWord.value) {\r\n        setMessagewarning(\"Ninguno de los campos pueden estar vacios.\")\r\n        setOpenAlertWarning(true)\r\n        return\r\n      }\r\n      dataWord.row[dataWord.field] = dataWord.value\r\n      Axios.put(`${URL}/tildes/${dataWord.row.id_word}`, dataWord.row).then( response => {\r\n        // console.log(response);\r\n        Axios({\r\n          url: `${URL}/tildes`\r\n        }).then( response => {\r\n          let count = 0;\r\n          let result_data = []\r\n          Object.values(response.data).forEach( item => {\r\n            count += 1;\r\n            result_data.push({\r\n              id: count,\r\n              id_word: item['id'],\r\n              word: item['word'],\r\n              wordwithtilde: item['wordwithtilde']\r\n            });\r\n          });\r\n          setList(result_data);\r\n          setOpenAlert(true)\r\n        })\r\n        .catch( error => {\r\n          console.error(error)\r\n          setOpenAlert(false)\r\n          setMessageerror(error.message)\r\n          setOpenAlertError(true)\r\n        })\r\n      })\r\n      .catch( error => {\r\n        console.log(error)\r\n      })\r\n    } catch (error) {\r\n      console.error(error)      \r\n    }\r\n  }\r\n\r\n  return (\r\n    <div style={{ height: 500, width: '100%' }}>\r\n      <div style={{display: 'flex', flexDirection: 'row', justifyContent: 'end'}}>\r\n        <label htmlFor=\"contained-button-add\">\r\n          <Input id=\"contained-button-add\" type=\"button\" onClick={addWord} />\r\n          <IconButton variant=\"contained\" component=\"span\">\r\n            <AddIcon />\r\n          </IconButton>\r\n        </label>\r\n        <label htmlFor=\"contained-button-file\">\r\n          <Input id=\"contained-button-file\" type=\"button\" onClick={submit} />\r\n          <IconButton variant=\"contained\" component=\"span\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </label>\r\n      </div>\r\n      <Stack spacing={2} sx={{ width: '100%' }}>\r\n        <Snackbar open={openAlert} autoHideDuration={6000} onClose={handleCloseAlert}>\r\n          <Alert onClose={handleCloseAlert} severity=\"success\" sx={{ width: '100%' }}>\r\n            Palabra Agregada.\r\n          </Alert>\r\n        </Snackbar>\r\n      </Stack>\r\n      <Stack spacing={2} sx={{ width: '100%' }}>\r\n        <Snackbar open={openAlertError} autoHideDuration={6000} sx={{ width: '300px' }} onClose={handleCloseAlertError}>\r\n          <Alert onClose={handleCloseAlertError} severity=\"error\" sx={{ width: '100%' }}>\r\n            <AlertTitle>Error</AlertTitle>\r\n            {messageerror}\r\n          </Alert>\r\n        </Snackbar>\r\n      </Stack>\r\n      <Stack spacing={2} sx={{ width: '100%' }}>\r\n        <Snackbar open={openAlertWarning} autoHideDuration={6000} sx={{ width: '300px' }} onClose={handleCloseAlertWarning}>\r\n          <Alert onClose={handleCloseAlertWarning} severity=\"warning\" sx={{ width: '100%' }}>\r\n            <AlertTitle>Advertencia</AlertTitle>\r\n            {messagewarning}\r\n          </Alert>\r\n        </Snackbar>\r\n      </Stack>\r\n      <Dialog fullWidth disableEscapeKeyDown open={openprogress} onClose={handleCloseProgress}>\r\n        <DialogTitle>Cargando...</DialogTitle>\r\n        <DialogContent>\r\n          <Box sx={{ width: '100%' }}>\r\n            <LinearProgress />\r\n          </Box>\r\n        </DialogContent>\r\n      </Dialog>\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <DialogTitle>Añadir Nuevas Palabras</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Formulario para añadir nuevas palabras en la Base de Datos.\r\n          </DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"word\"\r\n            label=\"Palabra sin Tilde\"\r\n            type=\"text\"\r\n            fullWidth\r\n            variant=\"standard\"\r\n            onChange={(word) => {\r\n              setWord(word.target.value)\r\n            }}\r\n          />\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"wordwithtilde\"\r\n            label=\"Palabra con Tilde\"\r\n            type=\"text\"\r\n            fullWidth\r\n            variant=\"standard\"\r\n            onChange={(word) => {\r\n              setWordwithtilde(word.target.value)\r\n            }}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n          <Button onClick={addWordSubmit}>Subscribe</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n        <Divider />\r\n        <Fragment>\r\n          <DataGrid\r\n              rows={list}\r\n              columns={columns}\r\n              pageSize={pageSize}\r\n              localeText={{\r\n                toolbarDensity: 'Size',\r\n                toolbarDensityLabel: 'Size',\r\n                toolbarDensityCompact: 'Small',\r\n                toolbarDensityStandard: 'Medium',\r\n                toolbarDensityComfortable: 'Large',\r\n              }}\r\n              components={{\r\n                Toolbar: GridToolbar,\r\n              }}\r\n              onPageSizeChange={(newPageSize) => setPageSize(newPageSize)}\r\n              rowsPerPageOptions={[5, 10, 20, 50, 100]}\r\n              checkboxSelection\r\n              onSelectionModelChange={(newSelection) => {\r\n                let listSelect = list.filter( item => newSelection.find(sel => sel == item.id))\r\n                let resultSelect = listSelect.map( ids => ids.id_word);\r\n                setSelection(resultSelect);\r\n              }}\r\n              onCellEditCommit={editWord}\r\n          />\r\n        </Fragment>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Tildes;","// import logo from './logo.svg';\nimport './App.scss';\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport VerifyTildes from './components/VerifyTildes';\nimport Navbar from './components/shared/Navbar';\nimport Tildes from './components/Tildes';\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Navbar />\n        <Routes>\n          <Route path=\"/tildes\" exact element={<Tildes />}/>\n          <Route path=\"/verify\" exact element={<VerifyTildes />}/>\n        </Routes>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}